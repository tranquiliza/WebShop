// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShop.Context;

namespace WebShop.Migrations
{
    [DbContext(typeof(WebShopContext))]
    partial class WebShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebShop.Models.GiftcardProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPriceOverrideable");

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.ToTable("GiftcardProducts");
                });

            modelBuilder.Entity("WebShop.Models.Language.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias");

                    b.HasKey("Id");

                    b.ToTable("LabelsAlias");

                    b.HasData(
                        new { Id = 1, Alias = "LBL_TEST_LABEL" },
                        new { Id = 2, Alias = "LBL_TEST_NUMBER_TWO" }
                    );
                });

            modelBuilder.Entity("WebShop.Models.Language.LabelValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LabelId");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("LanguageId");

                    b.ToTable("LabelValues");

                    b.HasData(
                        new { Id = 1, LabelId = 1, LanguageId = 1, Value = "Dette er et test label!" },
                        new { Id = 2, LabelId = 1, LanguageId = 2, Value = "This is a test label!" },
                        new { Id = 3, LabelId = 2, LanguageId = 1, Value = "Endnu et test label" },
                        new { Id = 4, LabelId = 2, LanguageId = 2, Value = "Yet another test label" }
                    );
                });

            modelBuilder.Entity("WebShop.Models.Language.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IsoCode");

                    b.Property<string>("LanguageName");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new { Id = 1, IsoCode = "da-DK", LanguageName = "Danish" },
                        new { Id = 2, IsoCode = "en-GB", LanguageName = "UK-English" }
                    );
                });

            modelBuilder.Entity("WebShop.Models.Language.LabelValue", b =>
                {
                    b.HasOne("WebShop.Models.Language.Label")
                        .WithMany("LabelValues")
                        .HasForeignKey("LabelId");

                    b.HasOne("WebShop.Models.Language.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });
#pragma warning restore 612, 618
        }
    }
}
